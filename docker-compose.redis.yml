services:
  prompt-sentinel:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: prompt-sentinel
    ports:
      - "8092:8080"  # Changed from 8081 to 8092 to avoid conflict with existing services
    environment:
      - API_ENV=development
      - LOG_LEVEL=INFO
      # LLM Provider Configuration
      - LLM_PROVIDER_ORDER=${LLM_PROVIDER_ORDER:-anthropic,openai,gemini}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_MODEL=${ANTHROPIC_MODEL:-claude-3-haiku-20240307}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4-turbo-preview}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-pro}
      # Detection Configuration
      - DETECTION_MODE=${DETECTION_MODE:-strict}
      - HEURISTIC_ENABLED=${HEURISTIC_ENABLED:-true}
      - LLM_CLASSIFICATION_ENABLED=${LLM_CLASSIFICATION_ENABLED:-true}
      # PII Configuration
      - PII_DETECTION_ENABLED=${PII_DETECTION_ENABLED:-true}
      - PII_REDACTION_MODE=${PII_REDACTION_MODE:-mask}
      # Redis Configuration (enabled for this compose file)
      - REDIS_ENABLED=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-changeme-in-production}
    volumes:
      - ./corpus:/app/corpus:ro
      - ./logs:/app/logs
    networks:
      - sentinel-network
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    container_name: prompt-sentinel-redis
    # Ephemeral Redis with security hardening
    command: >
      redis-server
      --save ""
      --appendonly no
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --requirepass ${REDIS_PASSWORD:-changeme-in-production}
      --rename-command FLUSHDB ""
      --rename-command FLUSHALL ""
      --rename-command CONFIG ""
      --rename-command SHUTDOWN ""
    ports:
      # Only bind to localhost for security
      - "127.0.0.1:6380:6379"  # Changed from 6379 to 6380 to avoid conflict
    networks:
      - sentinel-network
    restart: unless-stopped
    # Security options
    security_opt:
      - no-new-privileges:true
    read_only: true
    # Use tmpfs (RAM) for any data Redis tries to write
    tmpfs:
      - /data:size=256M
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "-a", "${REDIS_PASSWORD:-changeme-in-production}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  sentinel-network:
    driver: bridge

# NO volumes - completely ephemeral cache
