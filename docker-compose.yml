services:
  prompt-sentinel:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: prompt-sentinel
    ports:
      - "8092:8080"
    environment:
      - API_ENV=development
      - LOG_LEVEL=INFO
      # LLM Provider Configuration
      - LLM_PROVIDER_ORDER=${LLM_PROVIDER_ORDER}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_MODEL=${ANTHROPIC_MODEL:-claude-3-haiku-20240307}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4-turbo-preview}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-pro}
      # Detection Configuration
      - DETECTION_MODE=${DETECTION_MODE:-strict}
      - HEURISTIC_ENABLED=${HEURISTIC_ENABLED:-true}
      - LLM_CLASSIFICATION_ENABLED=${LLM_CLASSIFICATION_ENABLED:-true}
      # PII Configuration
      - PII_DETECTION_ENABLED=${PII_DETECTION_ENABLED:-true}
      - PII_REDACTION_MODE=${PII_REDACTION_MODE:-mask}
      # Redis Configuration (optional - set REDIS_ENABLED=true to use)
      - REDIS_ENABLED=${REDIS_ENABLED:-false}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./corpus:/app/corpus:ro
      - ./logs:/app/logs
    networks:
      - sentinel-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: prompt-sentinel-redis
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - sentinel-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    profiles:
      - with-redis

networks:
  sentinel-network:
    driver: bridge

volumes:
  redis-data:
